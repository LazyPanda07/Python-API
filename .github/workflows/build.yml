name: Build

on:
  push:
    branches:
        - master
    tags:
        - "v*"
        

jobs:
    windows-build:
      runs-on: windows-latest
      strategy:
        matrix:
            python-versions: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

      steps:
        - uses: actions/checkout@v4

        - name: Clone FaceSDK
          uses: actions/checkout@v4
          with:
            repository: 3DiVi/face-sdk
            path: FaceSDK

        - name: Install Python
          uses: actions/setup-python@v5
          with:
            python-version: "${{ matrix.python-versions }}"

        - name: Install build
          run: pip install build

        - name: Build
          shell: cmd
          run: |
              set CMAKE_ARGS=-DFACE_SDK_INCLUDE_PATH="${{ github.workspace }}\FaceSDK\include"
              python -m build

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.python-versions }}-windows
            path: dist\*.whl


    linux-build:
      runs-on: ubuntu-latest
      container:
        image: ubuntu:22.04
      strategy:
        matrix:
            python-versions: ["3.10", "3.11", "3.12", "3.13"]

      steps:
        - name: Install dependencies
          run: |
              apt update
              apt install -y gcc g++ cmake git unzip zip wget

        - uses: actions/checkout@v4

        - name: Clone FaceSDK
          uses: actions/checkout@v4
          with:
            repository: 3DiVi/face-sdk
            path: FaceSDK

        - name: Install Python
          uses: actions/setup-python@v5
          with:
            python-version: "${{ matrix.python-versions }}"

        - name: Install build
          run: pip install build

        - name: Build
          shell: bash
          run: CMAKE_ARGS="-DFACE_SDK_INCLUDE_PATH=${{ github.workspace }}/FaceSDK/include" python3 -m build

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.python-versions }}-linux
            path: dist/*.whl


    linux-aarch64-build:
      runs-on: ubuntu-latest
      needs: linux-build
      container:
        image: ubuntu:22.04
      strategy:
        matrix:
            python-versions: ["3.10", "3.11", "3.12", "3.13"]

      steps:
        - name: Install dependencies
          run: |
              apt update
              apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu cmake git unzip zip wget

        - uses: actions/checkout@v4

        - name: Clone FaceSDK
          uses: actions/checkout@v4
          with:
            repository: 3DiVi/face-sdk
            path: FaceSDK

        - name: Download pyi
          uses: actions/download-artifact@v4
          with:
            name: 3.13-linux
            path: pyi
        
        - name: Unzip pyi
          shell: bash
          working-directory: pyi
          run: unzip $(ls) -d .

        - name: Install Python
          uses: actions/setup-python@v5
          with:
            python-version: "${{ matrix.python-versions }}"

        - name: Install build
          run: pip install build

        - name: Build
          shell: bash
          run: |
              export CC=$(which aarch64-linux-gnu-gcc)
              export CXX=$(which aarch64-linux-gnu-g++)
              CMAKE_ARGS="-DFACE_SDK_INCLUDE_PATH=${{ github.workspace }}/FaceSDK/include -DTARGET_ARCH=aarch64 -DPYI_PATH=${{ github.workspace }}/pyi/face_sdk_3divi.pyi" python3 -m build

        - name: Rename
          shell: bash
          working-directory: dist
          run: |
              rm -rf *.gz
              export ARCHIVE=$(ls *.whl)
              unzip ${ARCHIVE} -d .
              find . -type f -name '*x86_64*' | while read -r file; do
                newname="${file//x86_64/aarch64}"
                mv "$file" "$newname"
              done
              export ARCHIVE=$(ls *.whl)
              rm -rf ${ARCHIVE}
              zip -r ${ARCHIVE} ./


        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.python-versions }}-linux-aarch64
            path: dist/*.whl
